name: Deploy Streamlit App to Cloud Run

on:
  push:
    branches:
      - Zenn

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: streamlitapp
  REGION: asia-northeast1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show environment variables
        run: |
          echo "PROJECT_ID: ${{ env.PROJECT_ID }}"
          echo "SERVICE_NAME: ${{ env.SERVICE_NAME }}"
          echo "REGION: ${{ env.REGION }}"
          echo "GITHUB_SHA: ${{ github.sha }}"

      - name: Authenticate Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          echo "Configuring Docker with gcloud credential helper..."
          gcloud auth configure-docker --quiet

      - name: Build and push Docker image
        run: |
          set -x  # シェルコマンドの詳細を表示
          echo "Starting Docker build for Streamlit app..."
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          
          echo "Pushing Docker image to Container Registry..."
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          set -x
          echo "Deploying to Cloud Run service: ${{ env.SERVICE_NAME }}"
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --project ${{ env.PROJECT_ID }}

      - name: Output deployed service URL
        run: |
          echo "Fetching deployed URL..."
          gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --project ${{ env.PROJECT_ID }} \
            --format 'value(status.url)'
